# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
  branches:
    include:
      - main
  tags:
    include:
      - "*.*.*"

pr:
  - main

variables:
  buildConfiguration: "Release"

strategy:
  matrix:
    linux:
      imageName: "ubuntu-latest"
    mac:
      imageName: "macos-latest"
    windows:
      imageName: "windows-latest"
  maxParallel: 3

pool:
  vmImage: $(imageName)

steps:
  - task: UseDotNet@2
    displayName: "Use .NET Core sdk 7.x and 6.x"
    inputs:
      version: |
        6.x
        7.x

  - task: UseDotNet@2
    displayName: "Use .NET Core sdk 5.x"
    inputs:
      version: 5.x

  - task: UseDotNet@2
    displayName: "Use .NET Core sdk 3.1.x"
    inputs:
      version: 3.1.x

  - script: dotnet --info
    displayName: "dotnet info"

  - script: dotnet restore --verbosity normal
    displayName: "dotnet restore"

  - script: dotnet build --configuration $(buildConfiguration) --verbosity normal
    displayName: "dotnet build $(buildConfiguration)"

  - script: dotnet test --configuration $(buildConfiguration) --no-build --verbosity normal
    displayName: "dotnet test $(buildConfiguration)"

  - script: dotnet pack -c $(buildConfiguration) -o ./artifacts/packages/ --no-build --verbosity normal
    displayName: "dotnet pack $(buildConfiguration)"
    condition: succeeded()

  - script: dotnet nuget push .\artifacts\packages\*.nupkg -s https://www.myget.org/F/netlah-minor/api/v2/package -k $(secrets.MYGET)
    displayName: "dotnet nuget push MyGet (netlah-minor)"
    condition: and(succeeded(), eq(variables.imageName, 'windows-latest'), or(eq(variables['build.sourceBranch'], 'refs/heads/main'), startsWith(variables['build.sourceBranch'], 'refs/tags/')))
